{"version":3,"file":"builtin_codegens.js","sourceRoot":"","sources":["../../src/builtin_codegens.ts"],"names":[],"mappings":";AAGA,0BAA0B,IAAY,EAAE,MAAc;IACpD,MAAM,CAAC,YAAY,GAAG,IAAI,GAAG,QAAQ,GAAG,MAAM,GAAG,KAAK,CAAC;AACzD,CAAC;AAEY,mBAAW,GACtB,UAAC,IAAY,EAAE,MAAc,IAAK,OAAA,wCAAqC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,SAAK,EAAxE,CAAwE,CAAC;AAEhG,qBAAa,GAAkB,UAAC,IAAY,EAAE,MAAc,EAC5B,aAAkC,EAClC,eAAqC;IAChF,IAAM,aAAa,GAAG,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACrD,IAAM,gBAAgB,GAAG,eAAe,CAAC,SAAS,GAAG,QAAM,eAAe,CAAC,SAAS,MAAG,GAAG,EAAE,CAAC;IAE7F,IAAM,MAAM,GAAG;QACb,oEAAoE;QACpE,2CAA2C;QAC3C,kBAAe,aAAa,QAAI;QAChC,SAAM,gBAAgB,QAAI;QAC1B,KAAK;KACN,CAAC;IAEF,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpE,CAAC,CAAC;AAEW,qBAAa,GAAkB,UAAC,IAAY,EAAE,MAAc,EAAE,IAAyB;IAClG,qBAAa,CAAC,YAAY,CAAC,EAAE,CAAC;IAC9B,IAAM,MAAM,GAAG;QACb,uDAAoD,IAAI,QAAI;QAC5D,+CAA4C,MAAM,gBAAY;KAC/D,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3D,CAAC,CAAC;AACF,qBAAa,CAAC,YAAY,CAAC,GAAG;IAC5B,OAAO,CAAC,IAAI,CAAC,mQAAmQ,CAAC,CAAC;IAClR,qBAAa,CAAC,YAAY,CAAC,GAAG,cAAO,CAAC,CAAC;AACzC,CAAC,CAAC;AAEW,qBAAa,GAAkB,UAAC,IAAY,EAAE,MAAc,EAAE,IAAyB;IAClG,IAAM,MAAM,GAAG;QACb,gDAA6C,IAAI,QAAI;QACrD,iDAA8C,MAAM,gBAAY;KACjE,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3D,CAAC,CAAC;AAGW,yBAAiB,GAAoD;IAChF,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,mBAAW,EAAE;IACtC,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,qBAAa,EAAE;IACjD,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,qBAAa,EAAE;IAChD,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,qBAAa,EAAE;CACjD,CAAC","sourcesContent":["import { LoaderCodeGen } from './Loader';\r\nimport { RouterLoaderOptions, RouteResourceOptions } from './options';\r\n\r\nfunction getRequireString(file: string, module: string): string {\r\n  return 'require(\\'' + file + '\\')[\\'' + module + '\\']';\r\n}\r\n\r\nexport const syncCodeGen: LoaderCodeGen =\r\n  (file: string, module: string) => `loadChildren: function() { return ${getRequireString(file, module)}; }`;\r\n\r\nexport const ensureCodeGen: LoaderCodeGen = (file: string, module: string,\r\n                                             loaderOptions: RouterLoaderOptions,\r\n                                             resourceOptions: RouteResourceOptions) => {\r\n  const requireString = getRequireString(file, module);\r\n  const webpackChunkName = resourceOptions.chunkName ? `, '${resourceOptions.chunkName}'` : '';\r\n\r\n  const result = [\r\n    `loadChildren: function() { return new Promise(function (resolve) {`,\r\n    `  require.ensure([], function (require) {`,\r\n    `    resolve(${requireString});`,\r\n    `  }${webpackChunkName});`,\r\n    `})}`\r\n  ];\r\n\r\n  return loaderOptions.inline ? result.join('') : result.join('\\n');\r\n};\r\n\r\nexport const systemCodeGen: LoaderCodeGen = (file: string, module: string, opts: RouterLoaderOptions) => {\r\n  systemCodeGen['deprecated']();\r\n  const result = [\r\n    `loadChildren: function() { return System.import('${file}')`,\r\n    `.then( function(module) { return module['${module}']; } ); }`\r\n  ];\r\n\r\n  return opts.inline ? result.join('') : result.join('\\n');\r\n};\r\nsystemCodeGen['deprecated'] = () => {\r\n  console.warn('\\nDEPRECATED: ng-router-loader \"async-system\" loader use the System.import construct which is deprecated in webpack 2 and will be removed in webpack 3, please use the \"async-import\" instead. (https://github.com/webpack/webpack/releases/tag/v2.1.0-beta.28)\\n');\r\n  systemCodeGen['deprecated'] = () => {};\r\n};\r\n\r\nexport const importCodeGen: LoaderCodeGen = (file: string, module: string, opts: RouterLoaderOptions) => {\r\n  const result = [\r\n    `loadChildren: function() { return import('${file}')`,\r\n    `  .then( function(module) { return module['${module}']; } ); }`\r\n  ];\r\n\r\n  return opts.inline ? result.join('') : result.join('\\n');\r\n};\r\n\r\n\r\nexport const BUILT_IN_CODEGENS: Array<{ name: string, codeGen: LoaderCodeGen }> = [\r\n  { name: 'sync', codeGen: syncCodeGen },\r\n  { name: 'async-require', codeGen: ensureCodeGen },\r\n  { name: 'async-import', codeGen: importCodeGen },\r\n  { name: 'async-system', codeGen: systemCodeGen }\r\n];\r\n"]}